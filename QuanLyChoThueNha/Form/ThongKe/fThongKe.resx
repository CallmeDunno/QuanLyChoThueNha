<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAO6SURBVGhD7ZZbSFRRFIZ966GiG0kQUfSQUG/1opV4HUupCCMqtftYIQXlJcuK0Kik7OpDqd0h
        oqgseuiCPYQl9VJURBRmN7UsrdS00Rz/nDNrdGbPOmdmdvtMBv7w4Xj23mt9S2cPEzKQgZicIZnhMIPB
        meGF1MLccM3/lkkFSdrPoAwhNldBZc1NhO2ao702fQixuQqqmx4GbwixuQocAwRtCLG5ClwDBGUIsbkK
        3AcwfQixuQrEAUwdQmyuAm4AB6YMITZXASfvQvkQYnMVcOLuuA9BGvIRmwcb0pAPVzSYkIZ8uKLBhDTk
        wxUVybyyH+5JP5/vtWdoVgQevX1OO4DK6sfaM3GfCGnIhysqMix7Op7VvSY14H1TPUbmRHrsWX5uO60C
        HV2dmFq4yGNdD9KQD1eUw1K8Ft3d3aQIrL+0t3dtRM5MvPn6kVaAwjsnPc4aQRry4YrqceVJBSkCH759
        xqjNzv9CTvlBegrUNNZidG6U11k9SEM+XFE9wvLnoa2jnVSB7KsHMGZrLBpamugJsKAsiz2rB2nIhytq
        xO5bZaQKfG5pRPG9C/QbUP70LnvGCNKQD1fUCMfbw3GJxbTa2jApfy57xgjSkA9X1BdpZ/JIuy+51w6x
        e31BGvLhivoi4+Ju0u7L1utH2L2+IA35cEWNmLgzCd/bWzTp3/Yu2H53aq9/2toxedd89owRpCEfrqgR
        7h+lJx5c9bjEt19WsWeMIA35cEX1SC7dRKpAe6dN+1gdv2M2mn+10lNo94M7qwdpyIcryhG6JQbvmupI
        EyiqONu7VnCzhJ46P1rHbov3OOsi7swsL0hDPlwjjmOVl0gR2h0Ytz2hd83x0Vr34wutAqX3L3ucdfHP
        Bog6vApddjvpAdtuFHvt2Xh5H60C9m474o6me+1xSVtSrCykFFjEJiLDs2fgaW3fN9H65q89b6dodt+r
        hne0C3jx6Y32Jc99zz8ZQCUDA3DhGpnFfzWAS5aDk3dASoGFa64CTtwFJ++AlAIL11wFMacSNNn4zYtZ
        Wb9ITT9OmvrhmqtgQkGk8y9+ejbiM5byggYkpFirEhM3DCJN/XDNVTGlKMY5REkiLCtXsqIcCanWT7HL
        1o0lReNwjVUxNCsc04rjnEMcmQtL2mpWWKBzVpo1kvR8h2uskuE5EZhZanHehz3JnLAHPW+dNaTmX7im
        qgnNm4Fofy61P5dWDNfQDHxdar8vbX9I9MIVYyxLrLW98oFc2v6S+FRreI+8rYfALm1/iuPCGl/akJA/
        ukOeYfiOVq4AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>